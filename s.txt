import React from 'react';
import altitudeImage from '../images/altitud.png';
import altitudeArrowImage from '../images/altitud_arrow.png';
import '../css/Altitude.css';

interface AltitudeProps {
  altitude: number;
}

function Altitude({ altitude }: AltitudeProps) {
  const topAltitude = 17.5;
  const bottomAltitude = 262.5;

  const totalHeight = bottomAltitude - topAltitude;
  const part = totalHeight / 5; // 49px per visual part
  
  const altitudeArrowY = getMarginTop(altitude);

  function getMarginTop(altitude: number): number {  
    const lowSectionHeight = part * 2;   // 98
    const midSectionHeight = part;       // 49
    const highSectionHeight = part * 2;  // 98
  
    let marginTop: number;
  
    if (altitude <= 1000) {
      const ratio = altitude / 1000;
      marginTop = bottomAltitude - ratio * lowSectionHeight;
    } else if (altitude <= 2000) {
      const ratio = (altitude - 1000) / 1000;
      marginTop = bottomAltitude - lowSectionHeight - ratio * midSectionHeight;
    } else {
      const ratio = (altitude - 2000) / 1000;
      marginTop = bottomAltitude - lowSectionHeight - midSectionHeight - ratio * highSectionHeight;
    }
  
    return marginTop;
  }

  // Calculate the position as a percentage (0-100)
  // We'll use 10% padding at top and bottom to account for the extra space

  return (
    <div className="altitude-wrapper">
      <div className="altitude-container">
        <img 
          src={altitudeImage} 
          alt="Altitude Tape" 
          className="altitude-tape"
        />
        <img 
          src={altitudeArrowImage} 
          alt="Altitude Arrow" 
          className="altitude-arrow"
          style={{
            marginTop: `${altitudeArrowY}px`
          }}
        />
      </div>
    </div>
  );
}

export default Altitude; 



.altitude-wrapper {
 
}

.altitude-container {
    display: flex;
    flex-direction: row-reverse ;
    grid: 0;
}

.altitude-tape {
    height: 300px;
}

.altitude-arrow {
    margin-top: 262.5px;
    height: 25px;
} 